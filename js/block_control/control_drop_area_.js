// Generated by CoffeeScript 1.9.3
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

this.control_drop_area_ = (function() {
  function control_drop_area_() {
    this.begin_animation = bind(this.begin_animation, this);
    var css;
    css = ".drop_area {\n	position: relative;\n}";
    $("<style type='text/css'></style>").html(css).appendTo("head");
    $("<div id='current-step' class='text'></div>\n<div class='drop_area' role='drop_area'></div>").appendTo($("body"));
    this.celebrity = new control_drag_zone_(5, 50, 365, 'celeb');
  }

  control_drop_area_.prototype.expand = function(block_name) {
    var current_counter;
    current_counter = window.counter;
    switch (current_counter) {
      case 1:
        return this.location = new control_drag_zone_(45, 75, 205, 'source');
      case 2:
        return this.destination = new control_drag_zone_(125, 75, 205, 'filter');
      case 3:
        return this.action = new control_drag_zone_(85, 182, 205, 'action');
      case 4:
        return this.create_button();
    }
  };

  control_drop_area_.prototype.create_button = function() {
    var $blacken, $new_div;
    $blacken = $("<div id='blackened-background-button'></div>").css({
      'z-index': '500',
      'opacity': '0.5',
      'background-color': 'black',
      width: '100%',
      height: '100%',
      position: 'absolute',
      left: '0px',
      top: '0px'
    });
    $("body").prepend($blacken);
    $new_div = $("<div id=\"new-button\">\n	<p style='position:absolute;font-size: 25px;left:17px;top:5px;' >RUN!</p>\n</div>");
    $new_div.css({
      borderRadius: 100,
      width: 90,
      height: 90,
      position: 'absolute',
      top: 180,
      left: 140,
      zIndex: 1000,
      backgroundColor: 'white'
    });
    $("body").prepend($new_div);
    $new_div.addClass('can--drop');
    return $new_div.bind('tap click', (function(_this) {
      return function() {
        return _this.run();
      };
    })(this));
  };

  control_drop_area_.prototype.begin_animation = function() {
    $("#new-button").remove();
    $("#blackened-background-button").remove();
    $(".drop-zone").remove();
    $("<div id='white-background-geocaching'></div>").prependTo($("body"));
    $("#white-background-geocaching").css({
      width: '100%',
      height: '100%',
      'z-index': '1500',
      'background-image': 'url("img/earth.gif")',
      'background-size': '70% auto',
      'background-repeat': 'no-repeat',
      'background-position': 'center 30%'
    });
    $("<h4 id='geocaching-message-coordinate'>##</h4>").prependTo($("body"));
    $("</br><h1 id='geocaching-message'>Your Coordinates</h1>").prependTo($("body"));
    $("#geocaching-message").css({
      'text-align': 'center',
      'color': 'white'
    });
    return $("#geocaching-message-coordinate").css({
      'text-align': 'center',
      'color': 'white'
    });
  };

  control_drop_area_.prototype.run = function() {
    var geocaching;
    this.begin_animation();
    geocaching = (function(_this) {
      return function() {
        return _this.location.run(function(latLng) {
          var cur_lat, cur_lng;
          cur_lat = latLng.lat();
          cur_lng = latLng.lng();
          $("#geocaching-message-coordinate").text(cur_lat + ", " + cur_lng);
          return _this.destination.run(latLng, function(is_true) {
            if (is_true) {
              return _this.action();
            }
          });
        });
      };
    })(this);
    geocaching();
    return setInterval(geocaching, 7000);
  };

  return control_drop_area_;

})();
